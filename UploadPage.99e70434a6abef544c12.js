(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{"1OZW":function(e,a,t){"use strict";var n=t("SW2M");Object.defineProperty(a,"__esModule",{value:!0}),Object.defineProperty(a,"default",{enumerable:!0,get:function(){return o.default}});var o=n(t("TZn1"))},"8/g6":function(e,a,t){"use strict";var n=t("SW2M");Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var o=n(t("q1tI")),i=n(t("6KpG")),r=n(t("+2mu"));var l=function(e,a){var t=function(a){return o.default.createElement(r.default,a,e)};return t.displayName=a,(t=(0,i.default)(t)).muiName="SvgIcon",t};a.default=l},CcK9:function(e,a,t){"use strict";t.r(a);var n=t("q1tI"),o=t.n(n),i=t("SUMQ"),r=t("1OZW"),l=t.n(r),d=t("vrOF"),s=t.n(d),c=t("6ZaM"),u=t.n(c),p=t("zEnc"),f=t.n(p);var m=Object(i.withStyles)(e=>({button:{margin:e.spacing.unit},input:{display:"none"},root:{display:"flex",justifyContent:"center",alignItems:"center",height:"100vh"},actions:{display:"flex",justifyContent:"center",paddingBottom:2*e.spacing.unit,paddingTop:2*e.spacing.unit}}))(class extends o.a.Component{constructor(e){super(e),this.handleFileUpload=(e=>{this.setState({uploading:!0}),null!==e.target.files&&function(e,a){const t=new FileReader;t.onload=(e=>{const n=t.result,o=JSON.parse(n);a(o)}),t.readAsText(e)}(e.target.files[0],e=>{this.setState({uploading:!1}),this.props.onStatsUploaded(e)})}),this.state={uploading:!1}}render(){const{classes:e}=this.props;return o.a.createElement("div",{className:e.root},o.a.createElement("div",null,o.a.createElement(u.a,{align:"center",variant:"headline"},"Please, upload your stats.json data"),o.a.createElement(u.a,{align:"center",variant:"caption",color:"textSecondary",paragraph:!0},"webpack --profile --json > stats.json"),o.a.createElement("div",{className:e.actions},o.a.createElement("input",{accept:".json",className:e.input,id:"button-file",onChange:this.handleFileUpload,type:"file"}),o.a.createElement("label",{htmlFor:"button-file"},o.a.createElement(l.a,{color:"primary",variant:"fab",disabled:this.state.uploading,component:"span",className:e.button},o.a.createElement(s.a,null)))),this.state.uploading?o.a.createElement(f.a,null):null))}}),h=t("wIs1"),b=t("6FtM");a.default=Object(h.a)(e=>o.a.createElement(b.a.Consumer,null,a=>o.a.createElement(m,{onStatsUploaded:t=>{a.onStatsDataLoaded(t),e.history.push("/inspect")}})))},TZn1:function(e,a,t){"use strict";var n=t("SW2M");Object.defineProperty(a,"__esModule",{value:!0}),a.default=a.styles=void 0;var o=n(t("JRbm")),i=n(t("ll+H")),r=n(t("Zdao")),l=n(t("hM+G")),d=n(t("q1tI")),s=(n(t("17x9")),n(t("TSYQ"))),c=n(t("Hk+Y")),u=t("wClv"),p=n(t("U0j5")),f=t("gasH"),m=function(e){return{root:(0,l.default)({},e.typography.button,{lineHeight:"1.4em",boxSizing:"border-box",minWidth:11*e.spacing.unit,minHeight:36,padding:"".concat(e.spacing.unit,"px ").concat(2*e.spacing.unit,"px"),borderRadius:4,color:e.palette.text.primary,transition:e.transitions.create(["background-color","box-shadow"],{duration:e.transitions.duration.short}),"&:hover":{textDecoration:"none",backgroundColor:(0,u.fade)(e.palette.text.primary,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"},"&$disabled":{backgroundColor:"transparent"}},"&$disabled":{color:e.palette.action.disabled}}),label:{width:"100%",display:"inherit",alignItems:"inherit",justifyContent:"inherit"},textPrimary:{color:e.palette.primary.main,"&:hover":{backgroundColor:(0,u.fade)(e.palette.primary.main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},textSecondary:{color:e.palette.secondary.main,"&:hover":{backgroundColor:(0,u.fade)(e.palette.secondary.main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},flat:{},flatPrimary:{},flatSecondary:{},outlined:{border:"1px solid ".concat("light"===e.palette.type?"rgba(0, 0, 0, 0.23)":"rgba(255, 255, 255, 0.23)")},colorInherit:{color:"inherit"},contained:{color:e.palette.getContrastText(e.palette.grey[300]),backgroundColor:e.palette.grey[300],boxShadow:e.shadows[2],"&$focusVisible":{boxShadow:e.shadows[6]},"&:active":{boxShadow:e.shadows[8]},"&$disabled":{color:e.palette.action.disabled,boxShadow:e.shadows[0],backgroundColor:e.palette.action.disabledBackground},"&:hover":{backgroundColor:e.palette.grey.A100,"@media (hover: none)":{backgroundColor:e.palette.grey[300]},"&$disabled":{backgroundColor:e.palette.action.disabledBackground}}},containedPrimary:{color:e.palette.primary.contrastText,backgroundColor:e.palette.primary.main,"&:hover":{backgroundColor:e.palette.primary.dark,"@media (hover: none)":{backgroundColor:e.palette.primary.main}}},containedSecondary:{color:e.palette.secondary.contrastText,backgroundColor:e.palette.secondary.main,"&:hover":{backgroundColor:e.palette.secondary.dark,"@media (hover: none)":{backgroundColor:e.palette.secondary.main}}},raised:{},raisedPrimary:{},raisedSecondary:{},focusVisible:{},disabled:{},fab:{borderRadius:"50%",padding:0,minWidth:0,width:56,fontSize:24,height:56,boxShadow:e.shadows[6],"&:active":{boxShadow:e.shadows[12]}},mini:{width:40,height:40},sizeSmall:{padding:"".concat(e.spacing.unit-1,"px ").concat(e.spacing.unit,"px"),minWidth:8*e.spacing.unit,minHeight:32,fontSize:e.typography.pxToRem(13)},sizeLarge:{padding:"".concat(e.spacing.unit,"px ").concat(3*e.spacing.unit,"px"),minWidth:14*e.spacing.unit,minHeight:40,fontSize:e.typography.pxToRem(15)},fullWidth:{width:"100%"}}};function h(e){var a,t=e.children,n=e.classes,l=e.className,c=e.color,u=e.disabled,m=e.disableFocusRipple,h=e.fullWidth,b=e.focusVisibleClassName,g=e.mini,y=e.size,v=e.variant,x=(0,r.default)(e,["children","classes","className","color","disabled","disableFocusRipple","fullWidth","focusVisibleClassName","mini","size","variant"]),S="fab"===v,C="contained"===v||"raised"===v,w=!C&&!S,k=(0,s.default)(n.root,(a={},(0,i.default)(a,n.contained,C||S),(0,i.default)(a,n.fab,S),(0,i.default)(a,n.mini,S&&g),(0,i.default)(a,n.colorInherit,"inherit"===c),(0,i.default)(a,n.textPrimary,w&&"primary"===c),(0,i.default)(a,n.textSecondary,w&&"secondary"===c),(0,i.default)(a,n.flat,w),(0,i.default)(a,n.flatPrimary,w&&"primary"===c),(0,i.default)(a,n.flatSecondary,w&&"secondary"===c),(0,i.default)(a,n.containedPrimary,!w&&"primary"===c),(0,i.default)(a,n.containedSecondary,!w&&"secondary"===c),(0,i.default)(a,n.raised,C||S),(0,i.default)(a,n.raisedPrimary,(C||S)&&"primary"===c),(0,i.default)(a,n.raisedSecondary,(C||S)&&"secondary"===c),(0,i.default)(a,n.text,"text"===v),(0,i.default)(a,n.outlined,"outlined"===v),(0,i.default)(a,n["size".concat((0,f.capitalize)(y))],"medium"!==y),(0,i.default)(a,n.disabled,u),(0,i.default)(a,n.fullWidth,h),a),l);return d.default.createElement(p.default,(0,o.default)({className:k,disabled:u,focusRipple:!m,focusVisibleClassName:(0,s.default)(n.focusVisible,b)},x),d.default.createElement("span",{className:n.label},t))}a.styles=m,h.propTypes={},h.defaultProps={color:"default",component:"button",disabled:!1,disableFocusRipple:!1,fullWidth:!1,mini:!1,size:"medium",type:"button",variant:"text"};var b=(0,c.default)(m,{name:"MuiButton"})(h);a.default=b},vrOF:function(e,a,t){"use strict";var n=t("SW2M");Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var o=n(t("q1tI")),i=(0,n(t("8/g6")).default)(o.default.createElement("g",null,o.default.createElement("path",{d:"M9 16h6v-6h4l-7-7-7 7h4zm-4 2h14v2H5z"})),"FileUpload");a.default=i}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,